#include "mbed.h"

#define RST_BIT 4
#define LAT_BIT 2
#define SLB_BIT 1
#define SCL_BIT 8
#define SDA_BIT 16

#define line1 1;
#define line2 2;
#define line3 4;
#define line4 8;
#define line5 16;
#define line6 32;
#define line7 64;
#define line8 128;

SPI RGB_SPI(PB_15,D7,D6);

BusOut LINE(D8,D9,D10,D11,D12,D13,D3,D4);

BusOut something(A0,A1,A2,D6,D7);
BusIn InSomething(A0,A1,A2,D6,D7);

DigitalOut RST_LED(A2);
DigitalOut LAT_LED(A1);
DigitalOut SLB_LED(A0);
DigitalOut SDA_LED(D7);
DigitalOut SCL_LED(D6);

struct colorStruct{
  unsigned char R;
  unsigned char G;
  unsigned char B;
};

struct colorStruct color(unsigned char R,unsigned char G,unsigned char B){
  struct colorStruct color2return;
  color2return.R = R;
  color2return.G = G;
  color2return.B = B;
}

uint8_t pat_1[8][8][3] ={ {{255,0,0},{255,18,0},{255,36,0},{255,54,0},{255,72,0},{255,90,0},{255,108,0},{255,126,0}},
                              {{255,18,0},{255,36,0},{255,54,0},{255,72,0},{255,90,0},{255,108,0},{255,126,0},{255,144,0}},
                              {{255,36,0},{255,54,0},{255,72,0},{255,90,0},{255,108,0},{255,126,0},{255,144,0},{255,162,0}},
                              {{255,54,0},{255,72,0},{255,90,0},{255,108,0},{255,126,0},{255,144,0},{255,162,0},{255,180,0}},
                              {{255,72,0},{255,90,0},{255,108,0},{255,126,0},{255,144,0},{255,162,0},{255,180,0},{255,198,0}},
                              {{255,90,0},{255,108,0},{255,126,0},{255,144,0},{255,162,0},{255,180,0},{255,198,0},{255,206,0}},
                              {{255,108,0},{255,126,0},{255,144,0},{255,162,0},{255,180,0},{255,198,0},{255,206,0},{255,224,0}},
                              {{255,126,0},{255,144,0},{255,162,0},{255,180,0},{255,198,0},{255,206,0},{255,224,0},{255,242,0}},
                            };



uint8_t pat_2[8][8][3] ={ {{255,0,0},{255,0,0},{255,0,0},{255,0,0},{255,0,0},{255,0,0},{255,0,0},{255,0,0}},
                              {{255,0,0},{255,0,0},{255,0,0},{255,0,0},{255,0,0},{255,0,0},{255,0,0},{255,0,0}},
                              {{255,0,0},{255,0,0},{255,0,0},{255,0,0},{255,0,0},{255,0,0},{255,0,0},{255,0,0}},
                              {{255,0,0},{255,0,0},{255,0,0},{255,0,0},{255,0,0},{255,0,0},{255,0,0},{255,0,0}},
                              {{255,0,0},{255,0,0},{255,0,0},{255,0,0},{255,0,0},{255,0,0},{255,0,0},{255,0,0}},
                              {{255,0,0},{255,0,0},{255,0,0},{255,0,0},{255,0,0},{255,0,0},{255,0,0},{255,0,0}},
                              {{255,0,0},{255,0,0},{255,0,0},{255,0,0},{255,0,0},{255,0,0},{255,0,0},{255,0,0}},
                              {{255,0,0},{255,0,0},{255,0,0},{255,0,0},{255,0,0},{255,0,0},{255,0,0},{255,0,0}}
                              };
int main(int argc, char const *argv[]) {

  int wd;
  RST_LED =0;
  RST_LED =1;
  RGB_SPI.frequency(20000000);
  RGB_SPI.format(8,1);
  LAT_LED = 0;
  SLB_LED  =0;
  int l=0;

  // for (int i =0;i<8;i++){
  //   for(int j =0;j<3;j++){
  //     for(int k=0;k=8;k++){
  //       wd<<1;
  //       l++;
  //       if (l>=7){
  //         RGB_SPI.write(255);
  //         l=0;
  //       }
  //     }
  //   }
  // }
  LAT_LED = 1;
  LAT_LED = 0;

  RGB_SPI.format(8,0);

  unsigned char color1[3] = {0,0,0};
  char line = 0x01;
  int counter = 0;

  LINE = 1;
  while (1){
    SLB_LED = 1;
    for(int i = 0; i<8;i++){
      for(int j = 0; j <8; j++){
        for(int a = 0; a <3; a++){
          RGB_SPI.write(100);
        }
      }
      LINE = 0;
      wait_ms(1);
      LAT_LED = 1;
      LAT_LED = 0;

      LINE = (0x01<<i);
    }
  }


  return 0;
}
